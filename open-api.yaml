# OpenAPI Definitions: https://swagger.io/specification/
openapi: 3.1.0

# General information
info:
  title: {{APP_NAME}} API
  description: |
    This API allows access to data of the {{APP_NAME}} application.

    ## Response type and language
    All endpoints return JSON data with `Content-Type: application/json`.
    Request another response type than JSON via `Accept` header will result in a `415 Unsupported Media Type` response.

    The JSON format is described in detail for every API endpoint. `null` values are always omitted to reduce the size of the response.

    An `Accept-Language` header can be used to switch between German and English error messages.

    ## Throttling requests
    Requests are limited to {{API_THROTTLE_REQUESTS_MAX_ATTEMPTS}} requests per {{API_THROTTLE_REQUESTS_DECAY_MINUTES}} minutes.
    The `X-RateLimit-Remaining` header in every response informs about how many requests are still allowed without exceeding the limit.
    Requests actually exceeding the limit will result in a `429 Too Many Requests` response.
  version: {{APP_VERSION}}

# Server addresses
servers:
  - url: {{API_ROOT_URL}}
    description: {{API_SERVER_DESCRIPTION}}

# Authentication
security:
  - bearer_token: [ ]

# Tags for grouping of API endpoints (ordered as in the UI for API documentation)
tags:
  - name: Users
    description: Access user data.

# API endpoints (ordered alphabetically)
paths:
  /account:
    get:
      operationId: get-account
      summary: Get account
      description: Returns the own user data.
      tags:
        - Users
      responses:
        200:
          description: the attributes and requested relations of the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/model.user'
        401:
          $ref: '#/components/responses/401'
        415:
          $ref: '#/components/responses/415'
        422:
          $ref: '#/components/responses/422'
        429:
          $ref: '#/components/responses/429'

components:
  securitySchemes:
    bearer_token:
      description: Authorization via a bearer token in HTTP header.
      type: http
      scheme: bearer

  # parameter descriptions used above
  parameters:
    page:
      in: query
      name: page
      description: the page number for the paginated response
      schema:
        type: integer
        default: 1

  ########################################################################################################################
  # GENERIC RESPONSES
  ########################################################################################################################
  responses:
    401:
      description: Unauthenticated. Returned if the request does not contain a correct personal access token.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string
    403:
      description: Forbidden. Returned if the personal access token does not have the required ability (see `message`).
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string
    404:
      description: Not Found. Returned if the requested object was not found.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string
    415:
      description: Unsupported Media Type. Will occur if you request another response format than JSON via `Accept` header.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string
    422:
      description: Unprocessable Content. Usually returned if the query or body parameters were invalid.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string
              errors:
                description: the list of detailed error messages (separated for each query parameter)
                type: object
                properties:
                  '*':
                    description: list of error message for the field
                    type: array
                    items:
                      type: string
    429:
      description: Too Many Requests. You exceeded the limit for requests per minute. Try again later.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                description: the main error message
                type: string

  schemas:
    ########################################################################################################################
    # BASE SCHEMAS
    ########################################################################################################################
    # paginated list of results
    _list:
      description: a list of objects with paging metadata attached
      properties:
        links:
          description: hyperlinks to other pages for the query parameters
          properties:
            first:
              description: the URL to the first page for the query parameters
              type: string
              format: uri
            last:
              description: the URL to the last page for the query parameters
              type: string
              format: uri
            prev:
              description: the URL to the previous page for the query parameters
              type: string
              format: uri
            next:
              description: the URL to the next page for the query parameters
              type: string
              format: uri
        meta:
          description: Metadata for page numbers, count, etc.
          properties:
            current_page:
              description: the current page number
              type: integer
              minimum: 1
            from:
              description: the index of the first object on the current page in the result set
              oneOf:
                - type: integer
                  minimum: 1
                - type: 'null'
            last_page:
              description: the number of the last page
              type: integer
              minimum: 1
            links:
              description: a collection of links for pagination.
              type: array
              items:
                properties:
                  url:
                    description: the URL for the current request
                    type: string
                    format: uri
                  label:
                    description: a description of the link (e. g. Next, Prev, or a page number)
                    type: string
                  active:
                    description: a bool determining if the URL is active
                    type:
                      - boolean
            path:
              description: the base path of the API endpoint
              type: string
              format: uri
            per_page:
              description: the number of objects shown per page
              type: integer
              minimum: 1
            to:
              description: the index of the last object on the current page in the result set
              oneOf:
                - type: integer
                  minimum: 1
                - type: 'null'
            total:
              description: the total number of objects in the result set.
              type: integer

    ########################################################################################################################
    # MODELS
    ########################################################################################################################
    id:
      description: the unique identifier of this object
      type: integer
      format: int64
      minimum: 1
    model:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/id'
        created_at:
          description: timestamp of object creation (ISO 8601)
          type: string
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z$'
        updated_at:
          description: timestamp of last object modification (ISO 8601)
          type: string
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z$'
    model.user:
      allOf:
        - $ref: '#/components/schemas/model'
        - type: object
          properties:
            first_name:
              description: the first name
              type: string
            last_name:
              description: the first name
              type: string
            email:
              description: the email address
              type: string
            email_verified_at:
              description: timestamp of last object modification (ISO 8601), null = not verified
              oneOf:
                - type: 'null'
                - type: string
                  pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z$'
            status:
              description: the status of the user's account (0 = inactive, 1 = active, 2 = archived)
              type: int
              minimum: 0
              maximum: 2
            last_login_at:
              description: timestamp of last object modification (ISO 8601), null = never logged in
              oneOf:
                - type: 'null'
                - type: string
                  pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{6}Z$'
